name: Run Tests
description: Run project tests and generate coverage report

inputs:
  build-path:
    default: 'build'
  source-path:
    default: '.'
  valgrind:
    default: 'false'
  coverage:
    default: 'false'
  gcov:
    default: 'gcov'

runs:
  using: composite
  steps:
    - name: Run tests
      id: run-tests
      working-directory: ${{ inputs.source-path }}
      run: meson test --print-errorlogs -C "${{ inputs.build-path }}"
      shell: bash

    - name: Run tests with valgrind
      id: run-tests-valgrind
      working-directory: ${{ inputs.source-path }}
      if: ${{ inputs.valgrind == 'true' }}
      run: |
        CONFIG_USE_VALGRIND=1
        CONFIG_PKG_SCRIPTS_DIR="${{ env.SCRIPTS_DIR }}"
        CONFIG_DEF_CFG_DIR="${{ env.SCRIPTS_DEF_CFG_DIR }}"
        source "${{ env.SCRIPTS_DEF_CFG_ENV }}"
        meson test \
          --wrap="${CONFIG_WRAPPER_CMD}" \
          -t 7 \
          --print-errorlogs \
          -C "${{ inputs.build-path }}"
      shell: bash

    - name: Calculate coverage
      id: calculate-coverage
      working-directory: ${{ inputs.source-path }}
      if: ${{ inputs.coverage == 'true' }}
      run: |
        echo "gcov-executable = ${{ inputs.gcov }}" > gcovr.cfg
        echo -e "filter = src/\nfilter = plugins/" >> gcovr.cfg
        ninja coverage-xml -C ${{ inputs.build-path }}
      shell: bash
