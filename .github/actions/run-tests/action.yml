name: Run Tests
description: Run project tests and generate coverage report

inputs:
  build-path:
    default: 'build'
  source-path:
    default: '.'
  valgrind:
    default: 'false'
  coverage:
    default: 'false'
  gcov:
    default: 'gcov'

runs:
  using: composite
  steps:
    - name: Run tests
      id: run-tests
      working-directory: ${{ inputs.source-path }}
      run: meson test --print-errorlogs -C ${{ inputs.build-path }}
      shell: bash

    - name: Run tests with valgrind
      id: run-tests-valgrind
      working-directory: ${{ inputs.source-path }}
      if: ${{ inputs.valgrind == 'true' }}
      run: |
          valgrind_cmd="valgrind"
          valgrind_cmd+=" --leak-check=full --show-leak-kinds=all"
          valgrind_cmd+=" --track-origins=yes --errors-for-leak-kinds=all"
          valgrind_cmd+=" --max-stackframe=3145916 --error-exitcode=1"
          meson test \
            --wrap="$valgrind_cmd" \
            -t 4.5 \
            --print-errorlogs \
            -C ${{ inputs.build-path }}
      shell: bash

    - name: Calculate coverage
      id: calculate-coverage
      working-directory: ${{ inputs.source-path }}
      if: ${{ inputs.coverage == 'true' }}
      run: |
        echo "gcov-executable = ${{ inputs.gcov }}" > gcovr.cfg
        echo -e "filter = src/\nfilter = plugins/" >> gcovr.cfg
        ninja coverage-xml -C ${{ inputs.build-path }}
      shell: bash
