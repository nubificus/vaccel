name: Upload to s3
description: Upload artifacts to s3

inputs:
  arch:
    default: 'x86_64'
  build-type:
    default: 'release'
  build-dir:
    default: 'build'
  plugin:
    default: ''
  access-key:
    required: true
  secret-key:
    required: true

runs:
  using: composite
  steps:
    - name: Determine SHA, branch and remote paths
      id: get_artifact_vars
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          if [ "${{ github.event.pull_request.merged }}" == true ]; then
            SHA="${{ github.sha }}"
            BRANCH="${{ github.base_ref }}"
            echo "PR merged. SHA: $SHA, Branch: $BRANCH"
          else
            SHA="${{ github.event.pull_request.head.sha }}"
            BRANCH="${{ github.event.pull_request.head.ref }}"
            echo "PR not yet merged. SHA: $SHA, Branch: $BRANCH"
          fi
        elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          SHA="${{ github.sha }}"
          BRANCH="${{ github.event.ref_name }}"
          echo "Workflow dispatch event. SHA: $SHA, Branch: $BRANCH"
        else
          echo "Event not supported."
          exit 1
        fi
        echo "ARTIFACT_SHA=$(echo $SHA)" >> "$GITHUB_OUTPUT"
        echo "ARTIFACT_NAME=$(echo $BRANCH)" >> "$GITHUB_OUTPUT"
        BASE_PATH="nbfc-assets/github/vaccel"
        if [ -n "${{ inputs.plugin }}" ]; then
          BASE_PATH="${BASE_PATH}/plugins/${{ inputs.plugin }}"
        fi
        echo "remote-name-path=$(echo "${BASE_PATH}/${BRANCH}/${{ inputs.arch }}/${{ inputs.build-type }}")" >> "$GITHUB_OUTPUT"
        echo "remote-sha-path=$(echo "${BASE_PATH}/${SHA}/${{ inputs.arch }}/${{ inputs.build-type }}")" >> "$GITHUB_OUTPUT"
      shell: bash

    - name: Get artifacts paths
      id: get_artifact_paths
      run: |
        DEB_DIR=$(dirname $(find "${{ inputs.build-dir }}" -name "vaccel*.deb" | head -1))
        TAR_DIR=$(dirname $(find "${{ inputs.build-dir }}" -name "vaccel*.tar.gz" | head -1))
        echo "deb-path=$DEB_DIR/vaccel*.deb" >> "$GITHUB_OUTPUT"
        echo "tar-path=$TAR_DIR/vaccel*bin.tar.gz" >> "$GITHUB_OUTPUT"
      shell: bash

    - name: Upload deb artifact to s3 by name
      uses: cloudkernels/minio-upload@v4
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{ inputs.access-key }}
        secret-key: ${{ inputs.secret-key }}
        local-path: ${{ steps.get_artifact_paths.outputs.deb-path }}
        remote-path: ${{ steps.get_artifact_vars.outputs.remote-name-path }}-deb/
        policy: 1

    - name: Upload deb artifact to s3
      uses: cloudkernels/minio-upload@v4
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{ inputs.access-key }}
        secret-key: ${{ inputs.secret-key }}
        local-path: ${{ steps.get_artifact_paths.outputs.deb-path }}
        remote-path: ${{ steps.get_artifact_vars.outputs.remote-sha-path }}-deb/
        policy: 1

    - name: Upload tar artifact to s3 by name
      uses: cloudkernels/minio-upload@v4
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{ inputs.access-key }}
        secret-key: ${{ inputs.secret-key }}
        local-path: ${{ steps.get_artifact_paths.outputs.tar-path }}
        remote-path: ${{ steps.get_artifact_vars.outputs.remote-name-path }}-tar/
        policy: 1

    - name: Upload tar artifact to s3
      uses: cloudkernels/minio-upload@v4
      with:
        url: https://s3.nubificus.co.uk
        access-key: ${{ inputs.access-key }}
        secret-key: ${{ inputs.secret-key }}
        local-path: ${{ steps.get_artifact_paths.outputs.tar-path }}
        remote-path: ${{ steps.get_artifact_vars.outputs.remote-sha-path }}-tar/
        policy: 1
