name: Test Build

on:
  workflow_call:
    inputs:
      actions-repo:
        type: string
        default: 'nubificus/vaccel'
      actions-rev:
        type: string
        default: 'main'
      runner:
        type: string
        default: '["gcc", "lite", "2204"]'
      runner-archs:
        type: string
        default: '["x86_64", "aarch64", "armv7l"]'
      options:
        type: string
        default: 'auto_features=enabled'
      valgrind:
        type: boolean
        default: true
    secrets:
      GIT_CLONE_PAT:
        required: false
      AWS_ACCESS_KEY:
        required: false
      AWS_SECRET_ACCESS_KEY:
        required: false

jobs:
  test-build:
    name: Test Build
    runs-on: [self-hosted, "${{ matrix.archconfig }}", "${{ fromJSON(inputs.runner) }}"]
    strategy:
      matrix:
        archconfig: ["${{ fromJSON(inputs.runner-archs) }}"]
        build-type: [debug, release]
      fail-fast: false
    env:
      DOWNLOAD_PATH: ${{github.workspace}}/artifacts/downloads/${{matrix.archconfig}}/${{matrix.build-type}}
      CC: gcc-12
      CXX: g++-12
    steps:
      - name: Checkout .github directory
        uses: actions/checkout@v4
        with:
          sparse-checkout: .github
          repository: ${{ inputs.actions-repo }}
          ref: ${{ inputs.actions-rev }}

      - name: Initialize workspace
        id: initialize-workspace
        uses: ./.github/actions/initialize-workspace
        with:
          fetch-depth: 0
          remote-actions-repo: ${{ inputs.actions-repo }}
          token: ${{ secrets.GIT_CLONE_PAT || github.token }}

      - name: Download artifacts from s3
        id: download-artifacts
        if: ${{ inputs.actions-repo != github.repository }}
        uses: ./.github/actions/download-from-s3
        with:
          branch: ${{ steps.initialize-workspace.outputs.remote-branch }}
          build-type: ${{ matrix.build-type }}
          arch: ${{ matrix.archconfig }}
          access-key: ${{ secrets.AWS_ACCESS_KEY }}
          secret-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          local-path: ${{ env.DOWNLOAD_PATH }}
          install: 'true'

      - name: Build project
        uses: ./.github/actions/build
        with:
          build-path: build_${{ matrix.build-type }}
          build-type: ${{ matrix.build-type }}
          options: ${{ inputs.options }}

      - name: Run tests
        uses: ./.github/actions/run-tests
        with:
          valgrind: ${{ inputs.valgrind }}
          build-path: build_${{ matrix.build-type }}

      - name: Clean-up
        if: ${{ always() }}
        run: |
          sudo rm -rf artifacts build*
          sudo apt-get purge -y \
            ${{ steps.download-artifacts.outputs.installed }} || echo
        shell: bash
